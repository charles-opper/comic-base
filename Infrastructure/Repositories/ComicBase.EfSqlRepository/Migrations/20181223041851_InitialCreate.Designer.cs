// <auto-generated />
using System;
using ComicBase.EfSqlRepository.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComicBase.EfSqlRepository.Migrations
{
    [DbContext(typeof(ComicBaseContext))]
    [Migration("20181223041851_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ComicBase.Core.Domain.Entities.Issue", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("Created");

                    b.Property<int>("IssueNumber");

                    b.Property<int>("PublisherId");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<DateTime>("Updated");

                    b.Property<int>("Volume");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Issues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Created = new DateTime(2018, 12, 22, 23, 18, 51, 140, DateTimeKind.Local).AddTicks(606),
                            IssueNumber = 1,
                            PublisherId = 1,
                            Title = "X-Men",
                            Updated = new DateTime(2018, 12, 22, 23, 18, 51, 142, DateTimeKind.Local).AddTicks(465),
                            Volume = 1,
                            Year = 1964
                        });
                });

            modelBuilder.Entity("ComicBase.Core.Domain.Entities.Publisher", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("SiteUrl")
                        .IsRequired();

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Created = new DateTime(2018, 12, 22, 23, 18, 51, 142, DateTimeKind.Local).AddTicks(5286),
                            Name = "Marvel",
                            SiteUrl = "http://www.marvel.com",
                            Updated = new DateTime(2018, 12, 22, 23, 18, 51, 142, DateTimeKind.Local).AddTicks(5310)
                        });
                });

            modelBuilder.Entity("ComicBase.Core.Domain.Entities.Issue", b =>
                {
                    b.HasOne("ComicBase.Core.Domain.Entities.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
